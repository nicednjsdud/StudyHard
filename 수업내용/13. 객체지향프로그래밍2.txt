1. 클래스와 객체

    1) 객체는 클래스에서 정의된 내용대로 메모리에 생성된 것을 의미함.
    2) 객체(Object)나 인스턴스 (instance)는 같은 말로 생각하면 됨.
        - 객체는 인스턴스를 포함하는 형태임.
        - instantiate, 인스턴스화 
        - class로부터 instance를 생성하는 것.

    3) 클래스의 구성요소 
        - 속성(멤버변수)
        - 기능(멤버 메서드)

    4) 인스턴스 생성

        클래스명 참조변수명 = new 클래스명();

    5) this : 객체 자기자신의 주소
       super : 조상객체의 주소

2. 접근 제한자

    1) 변수나 메서드에 접근 제한자를 지정하면 접근을 제한 할수 있음
        - public : 외부 클래스 어디에서나 접근 가능함
        - protected : 같은 패키지 내부와 상속 관계의 클래스에서만 접근 가능함.
        - (아무것도 표시안 함) : 같은 패키지 내부에서만 접근 가능함.
        - private : 같은 클래스 내부에서만 접근 가능함.

3. 함수와 메서드

    1) 함수(function)
        - 하나의 기능을 수행하는 일련의 코드
        - 구현된(정의된) 함수는 호출하여 사용하고 호출된 함수는 기능이 끝나면 제어가 반환됨
        - 함수로 구현된 하나의 기능은 여러 곳에서 동일한 방식으로 호출되어 사용될 수 있음.
    
    2) 함수 호출(Call Stack)과 스택 메모리 
        - 스택(stack) : 함수가 호출될 때 지역 변수들이 사용하는 메모리
        - 함수의 수행이 끝나면 자동으로 반환되는 메모리 

    3) 메서드 (method)
        - 객체의 기능을 구현하기 위해 클래스 내부에 구현되는 함수
        - 멤버 함수(member function) 이라고도함
        - 메서드를 구현함으로써 객체의 기능이 구현됨
        - 메서드의 이름은 그 객체를 사용하는 객체에 맞게 짓는것이 좋음.
        
4. 인스턴스 생성과 힙 메모리 (heap memory)

    1) 인스턴스(instance)
        - 클래스는 객체의 속성을 정의하고, 기능을 구현하여 만들어 놓은 코드 상태
        - 실제 클래스 기반으로 생성된 객체(인스턴스)는 각각 다른 멤버변수 값을 가지게됨
            - ex) 학생의 클래스에서 생성된 각각의 인스턴스는 각각 다른 이름, 학번,학년 등의 값을 가지게 됨.

        - new 키워드를 사용하여 인스턴스의 생성

    2) 힙 메모리 
        - 생성된 인스턴스는 동적 메모리(heap memory)에 할당이 된다.
            
